from quantopian.algorithm import (
    attach_pipeline,
    pipeline_output,
    order_optimal_portfolio,
)
import quantopian.optimize as opt
from quantopian.pipeline import Pipeline
from quantopian.pipeline.data.psychsignal import stocktwits
from quantopian.pipeline.factors import SimpleMovingAverage
from quantopian.pipeline.filters import QTradableStocksUS
from quantopian.pipeline.experimental import risk_loading_pipeline

def initialize(context):
    attach_pipeline(make_pipeline(),'data_pipe')
    attach_pipeline(risk_loading_pipeline(),'risk_pipe')
    schedule_function(
        rebalance,
        date_rules.week_start(),
        time_rules.market_open(),
    )

def before_trading_start(context, data):
    # Get pipeline output and store in context
    context.output = pipeline_output('data_pipe')
    context.risk_factor_betas = pipeline_output('risk_pipe')

def make_pipeline():
    psy = SimpleMovingAverage(
        inputs=[stocktwits.bull_minus_bear],
        window_length=3,
        mask=QTradableStocksUS()
    )
    return Pipeline(columns={'psy': psy,}, screen=psy.notnull() )

def rebalance(context, data):
    objective = opt.MaximizeAlpha(context.output.psy)
    context.max_leverage = 1.0
    context.max_pos_size = 0.05
    context.max_turnover = 0.60
    constrain_pos_size=opt.PositionConcentration.with_equal_bounds(
        -context.max_pos_size,context.max_pos_size)
    dollar_neutral = opt.DollarNeutral()
    max_leverage = opt.MaxGrossExposure(context.max_leverage)
    max_turnover = opt.MaxTurnover(context.max_turnover)

    factor_risk_constraints = opt.experimental.RiskModelExposure(
        context.risk_factor_betas,
        version=opt.Newest
    )

    order_optimal_portfolio(
        objective=objective,
        constraints=[
            max_leverage,
            dollar_neutral,
            constrain_pos_size,
            max_turnover,
            factor_risk_constraints,
        ]
    )
